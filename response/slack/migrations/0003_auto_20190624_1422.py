# Generated by Django 2.2.2 on 2019-06-24 14:22

import django.db.models.deletion
from django.db import migrations, models
from response.slack.slack_utils import get_user_profile
from django.db.models import F


def PopulateExternalUser(apps, schema_editor):
    Incident = apps.get_model('core', 'Incident')
    ExternalUser = apps.get_model('core', 'ExternalUser')

    UserStats = apps.get_model('slack', 'UserStats')
    PinnedMessage = apps.get_model('slack', 'PinnedMessage')

    user_id_list = [ x['userid'] for x in Incident.objects.all().values(userid=F('reporter'))
                  .union(Incident.objects.all().values(userid=F('lead')))
                  .union(UserStats.objects.all().values(userid=F('user_id')))
                  .union(PinnedMessage.objects.all().values(userid=F('author_id'))) if x['userid'] ]

    for user_id in user_id_list:
        ExternalID, created = ExternalUser.objects.get_or_create(app_id='slack',
                                                                   external_id=user_id,
                                                                   display_name=get_user_profile(user_id)['name'])
        ExternalID.save()


def move_userstats_user_id_forward(apps, schema_editor):
    ExternalUser = apps.get_model('core', 'ExternalUser')
    UserStats = apps.get_model('slack', 'UserStats')

    for userStat in UserStats.objects.all():
        userStat.user = ExternalUser.objects.get(external_id=userStat.user_id_tmp)
        userStat.save()


def move_pinnedmessage_user_id_forward(apps, schema_editor):
    ExternalUser = apps.get_model('core', 'ExternalUser')
    PinnedMessage = apps.get_model('slack', 'PinnedMessage')

    for pm in PinnedMessage.objects.all():
        pm.author = ExternalUser.objects.get(external_id=pm.author_id_tmp)
        pm.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_create_ExternalUser'),
        ('slack', '0002_workflow_workflowparameters'),
    ]

    operations = [
        migrations.RunPython(PopulateExternalUser),
        migrations.RenameField(
            model_name='userstats',
            old_name='user_id',
            new_name='user_id_tmp',
        ),
        migrations.AddField(
            model_name='userstats',
            name='user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.ExternalUser'),
            preserve_default=False,
        ),
        migrations.RunPython(move_userstats_user_id_forward),
        migrations.AlterField(
            model_name='userstats',
            name='user',
            field=models.ForeignKey(null=False, on_delete=django.db.models.deletion.CASCADE, to='core.ExternalUser'),
        ),
        migrations.AlterUniqueTogether(
            name='userstats',
            unique_together={('incident', 'user')},
        ),
        migrations.RemoveField(
            model_name='userstats',
            name='user_id_tmp',
        ),
        migrations.RenameField(
            model_name='pinnedmessage',
            old_name='author_id',
            new_name='author_id_tmp',
        ),
        migrations.AddField(
            model_name='pinnedmessage',
            name='author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='core.ExternalUser'),
            preserve_default=False,
        ),
        migrations.RunPython(move_pinnedmessage_user_id_forward),
        migrations.AlterField(
            model_name='pinnedmessage',
            name='author',
            field=models.ForeignKey(null=False, on_delete=django.db.models.deletion.PROTECT, to='core.ExternalUser'),
        ),
        migrations.RemoveField(
            model_name='pinnedmessage',
            name='author_id_tmp',
        ),
    ]
